switch(Var)
{
case VAConfigAttribRTFormat: return "VAConfigAttribRTFormat";
case VAConfigAttribSpatialResidual: return "VAConfigAttribSpatialResidual";
case VAConfigAttribSpatialClipping: return "VAConfigAttribSpatialClipping";
case VAConfigAttribIntraResidual: return "VAConfigAttribIntraResidual";
case VAConfigAttribEncryption: return "VAConfigAttribEncryption";
case VAConfigAttribRateControl: return "VAConfigAttribRateControl";
case VAConfigAttribDecSliceMode: return "VAConfigAttribDecSliceMode";
case VAConfigAttribDecJPEG: return "VAConfigAttribDecJPEG";
case VAConfigAttribDecProcessing: return "VAConfigAttribDecProcessing";
case VAConfigAttribEncPackedHeaders: return "VAConfigAttribEncPackedHeaders";
case VAConfigAttribEncInterlaced: return "VAConfigAttribEncInterlaced";
case VAConfigAttribEncMaxRefFrames: return "VAConfigAttribEncMaxRefFrames";
case VAConfigAttribEncMaxSlices: return "VAConfigAttribEncMaxSlices";
case VAConfigAttribEncSliceStructure: return "VAConfigAttribEncSliceStructure";
case VAConfigAttribEncMacroblockInfo: return "VAConfigAttribEncMacroblockInfo";
case VAConfigAttribMaxPictureWidth: return "VAConfigAttribMaxPictureWidth";
case VAConfigAttribMaxPictureHeight: return "VAConfigAttribMaxPictureHeight";
case VAConfigAttribEncJPEG: return "VAConfigAttribEncJPEG";
case VAConfigAttribEncQualityRange: return "VAConfigAttribEncQualityRange";
case VAConfigAttribEncQuantization: return "VAConfigAttribEncQuantization";
case VAConfigAttribEncIntraRefresh: return "VAConfigAttribEncIntraRefresh";
case VAConfigAttribEncSkipFrame: return "VAConfigAttribEncSkipFrame";
case VAConfigAttribEncROI: return "VAConfigAttribEncROI";
case VAConfigAttribEncRateControlExt: return "VAConfigAttribEncRateControlExt";
case VAConfigAttribProcessingRate: return "VAConfigAttribProcessingRate";
case VAConfigAttribEncDirtyRect: return "VAConfigAttribEncDirtyRect";
case VAConfigAttribEncParallelRateControl: return "VAConfigAttribEncParallelRateControl";
case VAConfigAttribEncDynamicScaling: return "VAConfigAttribEncDynamicScaling";
case VAConfigAttribFrameSizeToleranceSupport: return "VAConfigAttribFrameSizeToleranceSupport";
case VAConfigAttribFEIFunctionType: return "VAConfigAttribFEIFunctionType";
case VAConfigAttribFEIMVPredictors: return "VAConfigAttribFEIMVPredictors";
case VAConfigAttribStats: return "VAConfigAttribStats";
case VAConfigAttribEncTileSupport: return "VAConfigAttribEncTileSupport";
case VAConfigAttribCustomRoundingControl: return "VAConfigAttribCustomRoundingControl";
case VAConfigAttribQPBlockSize: return "VAConfigAttribQPBlockSize";
case VAConfigAttribMaxFrameSize: return "VAConfigAttribMaxFrameSize";
case VAConfigAttribPredictionDirection: return "VAConfigAttribPredictionDirection";
case VAConfigAttribMultipleFrame: return "VAConfigAttribMultipleFrame";
case VAConfigAttribContextPriority: return "VAConfigAttribContextPriority";
case VAConfigAttribDecAV1Features: return "VAConfigAttribDecAV1Features";
case VAConfigAttribTEEType: return "VAConfigAttribTEEType";
case VAConfigAttribTEETypeClient: return "VAConfigAttribTEETypeClient";
case VAConfigAttribProtectedContentCipherAlgorithm: return "VAConfigAttribProtectedContentCipherAlgorithm";
case VAConfigAttribProtectedContentCipherBlockSize: return "VAConfigAttribProtectedContentCipherBlockSize";
case VAConfigAttribProtectedContentCipherMode: return "VAConfigAttribProtectedContentCipherMode";
case VAConfigAttribProtectedContentCipherSampleType: return "VAConfigAttribProtectedContentCipherSampleType";
case VAConfigAttribProtectedContentUsage: return "VAConfigAttribProtectedContentUsage";
case VAConfigAttribEncHEVCFeatures: return "VAConfigAttribEncHEVCFeatures";
case VAConfigAttribEncHEVCBlockSizes: return "VAConfigAttribEncHEVCBlockSizes";
case VAConfigAttribEncAV1: return "VAConfigAttribEncAV1";
case VAConfigAttribEncAV1Ext1: return "VAConfigAttribEncAV1Ext1";
case VAConfigAttribEncAV1Ext2: return "VAConfigAttribEncAV1Ext2";
case VAConfigAttribEncPerBlockControl: return "VAConfigAttribEncPerBlockControl";
}
